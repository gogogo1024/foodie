<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingzhi.mapper.ItemsMapperCustom">
    <select id="queryItemComments" parameterType="Map" resultType="com.mingzhi.pojo.vo.ItemCommentVO">
        SELECT
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.spec_name as specName,
        ic.created_time as createdTime,
        u.face as userFace,
        u.nickname as nickname
        FROM items_comments ic
        LEFT JOIN
        users u
        ON
        ic.user_id = u.id
        WHERE
        ic.item_id = #{paramsMap.itemId}
        <if test="paramsMap.commentLevel != null and paramsMap.commentLevel != '' ">
            AND ic.comment_level = #{paramsMap.commentLevel}
        </if>
    </select>
    <select id="searchItems" parameterType="Map" resultType="com.mingzhi.pojo.vo.SearchItemsVO">
        SELECT i.id AS itemId,
        i.sell_counts AS sellCounts,
        i.item_name AS itemName,
        ii.url AS imgUrl,
        tempSpec.price_discount AS price
        FROM items i
        LEFT JOIN items_img ii
        ON i.id = ii.item_id
        LEFT JOIN (SELECT item_id,
        MIN(price_discount) AS price_discount
        FROM items_spec
        GROUP BY item_id) AS tempSpec ON i.id = tempSpec.item_id
        WHERE ii.is_main = 1
        <if test="paramsMap.keywords != null and paramsMap.keywords != '' ">
            AND i.item_name like '%${paramsMap.keywords}%'
        </if>
        order by
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                sellCounts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                price asc
            </when>
            <otherwise>
                itemName asc
            </otherwise>
        </choose>
    </select>
    <select id="searchItemsByThirdCategory" parameterType="Map" resultType="com.mingzhi.pojo.vo.SearchItemsVO">
        SELECT i.id AS itemId,
        i.sell_counts AS sellCounts,
        i.item_name AS itemName,
        ii.url AS imgUrl,
        tempSpec.price_discount AS price
        FROM items i
        LEFT JOIN items_img ii
        ON i.id = ii.item_id
        LEFT JOIN (SELECT item_id,
        MIN(price_discount) AS price_discount
        FROM items_spec
        GROUP BY item_id) AS tempSpec ON i.id = tempSpec.item_id
        WHERE ii.is_main = 1
        AND i.cat_id = ${paramsMap.catId}
        order by
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                sellCounts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                price asc
            </when>
            <otherwise>
                itemName asc
            </otherwise>
        </choose>
    </select>
    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.mingzhi.pojo.vo.ShopCartVO">
        SELECT i.id AS itemId,
        i.item_name AS itemName,
        ii.url AS itemImgUrl,
        isp.id AS specId,
        isp.`name` AS specName,
        isp.price_discount AS priceDiscount,
        isp.price_normal AS priceNormal
        FROM items_spec isp
        LEFT JOIN items i ON isp.item_id = i.id
        LEFT JOIN items_img ii ON isp.item_id = ii.item_id
        WHERE is_main = 1
        AND isp.id IN
        <foreach collection="paramsList" index="index" item="specId" open="(" close=")" separator=",">
            #{specId}
        </foreach>
    </select>
    <select id="queryItemsSpecBySpecIds" parameterType="List" resultType="com.mingzhi.pojo.vo.ItemSpecVO">
        SELECT
        i.id AS itemId,
        i.item_name AS itemName,
        ii.url AS itemImg,
        isp.id AS itemSpecId,
        isp.`name` AS itemSpecName,
        isp.price_discount AS priceDiscount,
        isp.price_normal AS priceNormal
        FROM
        items_spec isp
        LEFT JOIN items i ON isp.item_id = i.id
        LEFT JOIN items_img ii ON isp.item_id = ii.item_id
        WHERE
        is_main = 1
        AND isp.id IN
        <foreach collection="paramsList" index="index" item="itemSpecId" open="(" close=")" separator=",">
            #{itemSpecId}
        </foreach>
    </select>
    <!--    乐观锁机制减库存-->
    <update id="decreaseItemSpecStock">
        update items_spec
        set stock = stock - #{buyCounts}
        where id = #{specId}
          and stock >= #{buyCounts}

    </update>
</mapper>